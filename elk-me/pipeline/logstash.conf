input{
    file {
        path => ["/var/log/nginx/serve_access.log"]
        stat_interval => 1
        sincedb_path => "/var/log/nginx_serve.pos"
        type => "serve"
        #codec => json{}
    }
    file {
        path => ["/var/log/nginx/panel_access.log"]
        stat_interval => 1
        sincedb_path => "/var/log/nginx_panel.pos"
        type => "panel"
        #codec => json{}
    }
    file {
        path => ["/var/log/nginx/admin_access.log"]
        stat_interval => 1
        sincedb_path => "/var/log/nginx_admin.pos"
        type => "admin"
        #codec => json{}
    }
}


filter {
      drop {
        percentage => 90
      }
      grok {
        match => {"message" => "%{IP:remote} - %{NOTSPACE:host_name} - %{NOTSPACE:remote_user} \[%{HTTPDATE:logtime}\] \"(?:%{NOTSPACE:method} %{NOTSPACE:url}(?: HTTP/%{NUMBER})?|-)\"%{SPACE}%{NUMBER:status_code} (?:%{NUMBER:size}|-) \"(?:%{DATA:referrer}|-)\" \"%{DATA:agent}\"rt=%{NOTSPACE:request_time} uct=%{NOTSPACE:upstream_connect_time} uht=%{NOTSPACE:upstream_header_time} urt=%{NOTSPACE:upstream_response_time}" }
      }
      if "_grokparsefailure" in [tags]{
        drop {}
      }
      date {
        match => [ "logtime","dd/MMM/YYYY:HH:mm:ss Z" ]
        target => "log_time"
      }

      mutate {
          rename => { "@timestamp" => "logstashTimestamp" }
          rename => { "log_time" => "@timestamp" }
          rename => { "type" => "module" }
          add_field => ["server_name", "${HOSTNAME}"]
          remove_field => [ "@index","message","logtime","path","host","@version","beat","source", "input_type", "tags", "logstashTimestamp", "type", "_type"]
          #rename => { "@timestamp" => "logstashTimestamp" }
      }

      if (![@timestamp]) {
        drop {}
      }
}
output {
    elasticsearch {
      hosts => ["${ELASTIC_ADD:116.203.98.137:9200}"]
      index => "nginx-%{+YYYY.MM.dd}"
      manage_template => true
      template => "/usr/share/logstash/config/nginx_template.json"
      template_name => "logs"
      template_overwrite => true
    }
}
